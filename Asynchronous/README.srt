Asynchronous code 异步编程
===================
    The simplest definition of Async...
        - "A style of concurrent programming"
        async IO that's not the only way to do a thing

    How Does Python Do Multiple Things At Once?
        - Multiple Processes
            The OS does all the multi-tasking work
            Only option for multi-core concurrency
        - Multiple Threads
            The OS does all the multi-tasking work
            In CPython, the GIL prevents multi-core concurrency
        - Asynchronous Programming
            No OS intervention
            One process, one thread


    A practical definition of Async...
        "A style of concurrent programming in which tasks release the CPU during waiting periods, so that other tasks can use it."

    How is Async Implemented?
        Suspend and Resume:
            Async functions need the ability to suspend and resume
            A function that enters a waiting period is suspended, and only resumed when the wait is over

            Four ways to implement suspend/resume in Python
                - Callback functions
                - Generator functions
                - Async/wait (Python 3.5+)
                - Greenlets (requires greenlet package)

        Scheduling Asynchronous Tasks
            Async frameworks need a scheduler, usually called "event loop"
            The loop keeps track of all the running tasks
            When a function is suspended, return controls to the loop, which then finds another function to start or resume.
            This is called "" Cooperative multi-tasking

    Async Pitfulls:
        CPU Heavy Tasks
            Long CPU-intensive tasks must routinely release the CPU to avoid starving other tasks
            This can be done by "sleeping" periodically, such as once per loop iteration
            To tell the loop to return control back as soon as possible, sleep for 0 seconds
            Example: await asyncio.sleep(0)

        Async and Python Standard Library
            Blocking library functions are incompatible with async framworks
                socket, select
                subprocess, os, waitpid
                threading, multiprocessing
                time.sleep
            All async frameworks provide non-block replacement for these
            Eventlet and Gevent can "Monkey-patch" the standard library to make it async compatible
            

